@page "/appliances/{Id:int}"
@using HomeMaintenance.Core.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<ConfirmationDialog @ref="confirmationDialog" 
                   Title="Delete Appliance" 
                   Message="Are you sure you want to delete this appliance?" 
                   Details="This action cannot be undone. All associated maintenance tasks will also be removed."
                   ConfirmText="Delete Appliance"
                   OnConfirm="ConfirmDeleteAppliance" />

<PageTitle>Appliance Details - Home Maintenance</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-5">ðŸ”§ Appliance Details</h1>
                    <p class="lead">View and manage appliance information</p>
                </div>
                <div>
                    <a href="/appliances/@Id/edit" class="btn btn-warning me-2">
                        <i class="bi bi-pencil"></i> Edit
                    </a>
                    <a href="/appliances" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Appliances
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (appliance != null)
    {
        <div class="row">
            <!-- Appliance Information -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Appliance Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Name</label>
                                    <div>@appliance.Name</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Category</label>
                                    <div>
                                        @if (!string.IsNullOrEmpty(appliance.Category))
                                        {
                                            <span class="badge bg-secondary">@appliance.Category</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not specified</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Brand</label>
                                    <div>@(appliance.Brand ?? "Not specified")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Model</label>
                                    <div>@(appliance.Model ?? "Not specified")</div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Serial Number</label>
                                    <div>@(appliance.SerialNumber ?? "Not specified")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Location</label>
                                    <div>@(appliance.Location ?? "Not specified")</div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Purchase Date</label>
                                    <div>@(appliance.PurchaseDate?.ToString("MMM dd, yyyy") ?? "Not specified")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Purchase Price</label>
                                    <div>@(appliance.PurchasePrice?.ToString("C") ?? "Not specified")</div>
                                </div>
                            </div>
                        </div>

                        @if (appliance.WarrantyExpirationDate.HasValue)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Warranty Expiration</label>
                                        <div>
                                            @{
                                                var warrantyStatus = appliance.WarrantyExpirationDate.Value < DateTime.Now ? "Expired" :
                                                                    appliance.WarrantyExpirationDate.Value < DateTime.Now.AddDays(30) ? "Expiring Soon" : "Active";
                                                var badgeClass = warrantyStatus switch
                                                {
                                                    "Expired" => "bg-danger",
                                                    "Expiring Soon" => "bg-warning",
                                                    _ => "bg-success"
                                                };
                                            }
                                            <span class="badge @badgeClass">@warrantyStatus</span>
                                            @appliance.WarrantyExpirationDate.Value.ToString("MMM dd, yyyy")
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Extended Warranty Expiration</label>
                                        <div>@(appliance.ExtendedWarrantyExpirationDate?.ToString("MMM dd, yyyy") ?? "Not specified")</div>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(appliance.ManualUrl))
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Manual URL</label>
                                        <div>
                                            <a href="@appliance.ManualUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-file-earmark-text"></i> View Manual
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Photo</label>
                                        <div>
                                            @if (!string.IsNullOrEmpty(appliance.PhotoUrl))
                                            {
                                                <a href="@appliance.PhotoUrl" target="_blank" class="btn btn-sm btn-outline-secondary">
                                                    <i class="bi bi-image"></i> View Photo
                                                </a>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No photo available</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(appliance.Notes))
                        {
                            <div class="mb-3">
                                <label class="form-label fw-bold">Notes</label>
                                <div class="border rounded p-3 bg-light">@appliance.Notes</div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Quick Actions</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a href="/appliances/@Id/maintenance" class="btn btn-warning">
                                <i class="bi bi-wrench"></i> View Maintenance Tasks
                            </a>
                            <a href="/appliances/@Id/manuals" class="btn btn-info">
                                <i class="bi bi-file-earmark-text"></i> Manage Manuals
                            </a>
                            <a href="/appliances/@Id/edit" class="btn btn-primary">
                                <i class="bi bi-pencil"></i> Edit Appliance
                            </a>
                            <button class="btn btn-danger" @onclick="DeleteAppliance">
                                <i class="bi bi-trash"></i> Delete Appliance
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Maintenance Summary -->
                <div class="card mt-3">
                    <div class="card-header">
                        <h5 class="mb-0">Maintenance Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-6">
                                <div class="border-end">
                                    <h4 class="text-primary">@(maintenanceTasks?.Count() ?? 0)</h4>
                                    <small class="text-muted">Total Tasks</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <h4 class="text-warning">@(overdueTasks?.Count() ?? 0)</h4>
                                <small class="text-muted">Overdue</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (isLoading)
    {
        <div class="row">
            <div class="col">
                <div class="text-center py-5">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">Loading appliance details...</p>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col">
                <div class="text-center py-5">
                    <i class="bi bi-exclamation-triangle fs-1 text-warning"></i>
                    <h3 class="mt-3">Appliance Not Found</h3>
                    <p class="text-muted">The appliance you're looking for doesn't exist or has been removed.</p>
                    <a href="/appliances" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Back to Appliances
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Appliance? appliance;
    private IEnumerable<MaintenanceTask>? maintenanceTasks;
    private IEnumerable<MaintenanceTask>? overdueTasks;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadAppliance();
    }

    private async Task LoadAppliance()
    {
        try
        {
            appliance = await Http.GetFromJsonAsync<Appliance>($"http://localhost:5062/api/appliances/{Id}");
            
            if (appliance != null)
            {
                // Load maintenance tasks for this appliance
                maintenanceTasks = await Http.GetFromJsonAsync<IEnumerable<MaintenanceTask>>($"http://localhost:5062/api/appliances/{Id}/maintenance-tasks");
                
                // Calculate overdue tasks
                overdueTasks = maintenanceTasks?.Where(t => 
                    t.NextDueDate.HasValue && t.NextDueDate.Value < DateTime.Now) ?? new List<MaintenanceTask>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading appliance: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private ConfirmationDialog? confirmationDialog;

    private async Task DeleteAppliance()
    {
        await confirmationDialog!.ShowAsync();
    }

    private async Task ConfirmDeleteAppliance()
    {
        try
        {
            var response = await Http.DeleteAsync($"http://localhost:5062/api/appliances/{Id}");
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/appliances");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting appliance: {ex.Message}");
        }
    }
} 